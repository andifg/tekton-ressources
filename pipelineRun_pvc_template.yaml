apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  generateName: git-clone-
  namespace: tekton-resources
spec:
  pipelineRef:
    resolver: cluster
    params:
      - name: kind
        value: pipeline
      - name: name
        value: python-lint-test-build-deploy
      - name: namespace
        value: tekton-resources
  params:
  - name: dev-repo-url
    value: git@github.com:andifg/tekton_and_argo_test.git
  - name: dev-depl-url
    value: git@github.com:andifg/openshift-pipelines-application.git
  - name: context-path
    value: /hello-world
  - name: image-name
    value: image-registry.openshift-image-registry.svc:5000/tekton-pipelines/fast-api-server
  - name: yq-select
    value: (.spec.template.spec.containers[] | select(.name == "my-container") .image)
  - name: yq-target
    value: openshift-pipelines-application/hello-world/deployment.yaml
  workspaces:
  - name: ssh-creds
    secret:
      secretName: ssh-creds
  - name: app-pvc
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 300Mi
        volumeMode: Filesystem
  - name: argo-pvc
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 300Mi
        volumeMode: Filesystem